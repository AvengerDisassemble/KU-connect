name: Backend CI

on:
  push:
    branches: [ main, dev, 'feature/**' ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    defaults:
      run:
        working-directory: ./backend
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma Client
      run: npx prisma generate
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
    
    - name: Run database migrations
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
    
    - name: Seed database (if seed script exists)
      run: |
        if npm run | grep -q "seed"; then
          npm run seed
        else
          echo "No seed script found, skipping..."
        fi
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
      continue-on-error: true
    
    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
        NODE_ENV: test
    
    - name: Check code style (StandardJS)
      run: |
        if npm list standard --depth=0 2>/dev/null; then
          npx standard
        else
          echo "StandardJS not found in dependencies, skipping style check..."
        fi
      continue-on-error: true
    
    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: backend
        name: backend-coverage
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: test
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma Client
      run: npx prisma generate
    
    - name: Validate Prisma schema
      run: npx prisma validate
    
    - name: Check for build script
      run: |
        if npm run | grep -q "build"; then
          npm run build
        else
          echo "No build script found, creating artifact from source..."
          mkdir -p dist
          cp -r src dist/
          cp package*.json dist/
          cp server.js dist/
          cp -r prisma dist/
        fi
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backend-dist-${{ github.sha }}
        path: backend/dist/
        retention-days: 30